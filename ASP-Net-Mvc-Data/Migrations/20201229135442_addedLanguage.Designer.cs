// <auto-generated />
using System;
using ASP_Net_Mvc_Data.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ASP_Net_Mvc_Data.Migrations
{
    [DbContext(typeof(PeopleDbContext))]
    [Migration("20201229135442_addedLanguage")]
    partial class addedLanguage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ASP_Net_Mvc_Data.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("text");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CityList");
                });

            modelBuilder.Entity("ASP_Net_Mvc_Data.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CountryList");
                });

            modelBuilder.Entity("ASP_Net_Mvc_Data.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LanguageTitle")
                        .HasColumnType("text");

                    b.Property<int?>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("LanguageList");
                });

            modelBuilder.Entity("ASP_Net_Mvc_Data.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PersonList");
                });

            modelBuilder.Entity("ASP_Net_Mvc_Data.Models.PersonLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("LanguageID")
                        .HasColumnType("integer");

                    b.Property<int>("PersonID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LanguageID");

                    b.HasIndex("PersonID");

                    b.ToTable("PersonLanguageList");
                });

            modelBuilder.Entity("ASP_Net_Mvc_Data.Models.City", b =>
                {
                    b.HasOne("ASP_Net_Mvc_Data.Models.Country", "Country")
                        .WithMany("CityList")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("ASP_Net_Mvc_Data.Models.Language", b =>
                {
                    b.HasOne("ASP_Net_Mvc_Data.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("ASP_Net_Mvc_Data.Models.Person", b =>
                {
                    b.HasOne("ASP_Net_Mvc_Data.Models.City", "City")
                        .WithMany("PeopleList")
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("ASP_Net_Mvc_Data.Models.PersonLanguage", b =>
                {
                    b.HasOne("ASP_Net_Mvc_Data.Models.Language", "Language")
                        .WithMany("PersonLanguageList")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP_Net_Mvc_Data.Models.Person", "Person")
                        .WithMany("PersonLanguageList")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
